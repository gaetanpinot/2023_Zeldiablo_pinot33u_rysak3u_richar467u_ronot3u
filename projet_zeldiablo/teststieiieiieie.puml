@startuml
class graphe.Noeud {
- String nom

+ String getNom()
+ List<Arc> getAdj()
+ boolean equals(Object)
+ void ajouterArc(String,double)
+ String adjString()
}
interface graphe.Graphe {
~ List<String> listeNoeuds()
~ List<Arc> suivants(String)
}


class graphe.Valeur {
~ Map<String,Double> valeur
~ Map<String,String> parent
+ void setValeur(String,double)
+ void setParent(String,String)
+ String getParent(String)
+ double getValeur(String)
+ String toString()
+ List<String> calculerChemin(String)
}
class graphe.Arc {
- String dest
- double cout
+ String getDest()
+ double getCout()
+ String toString()
+ String toGraphviz()
}
class graphe.GrapheLabyrinthe {
- Labyrinthe laby
+ List<String> listeNoeuds()
+ List<Arc> suivants(String)
+ int[] suivantValide(String,int,int)
+ {static} int[] extraireCoordonnees(String)
+ boolean coorValide(int,int)
+ Labyrinthe getLaby()
}
class graphe.BellmanFord {
+ Valeur resoudre(Graphe,String)
}
Noeud-> "1*" Arc : adj


Graphe <|.. GrapheLabyrinthe
@enduml